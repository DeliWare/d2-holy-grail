{"version":3,"sources":["config/localStorage.ts","utils/remote-url.ts","utils/localStorage.ts","hooks/resources.ts","components/chooseProfile.tsx","router/requireUser.tsx","router/paths.ts","components/itemTable.tsx","components/recentItems.tsx","hooks/auth-hook.ts","items/index.ts","pages/home.tsx","pages/login.tsx","utils/password-hash.ts","pages/item.tsx","router/requireAuth.tsx","router/requireProfile.tsx","router/index.tsx","index.tsx"],"names":["TOKEN_KEY","USER_KEY","PROFILE_KEY","TYPE_KEY","LANG_KEY","MODE_KEY","MaxrollHost","path","baseUrl","trim","substring","MakeUrl","getLocalStorage","key","window","localStorage","getItem","setLocalStorage","value","setItem","JSON","stringify","getUser","Number","getLang","useProfile","options","manual","useAxios","url","method","headers","Authorization","ChooseProfile","profiles","saveProfile","onChange","target","map","profile","id","name","RequireUser","children","useUser","data","execute","useState","setProfile","lang","parse","useCallback","useEffect","length","ITEM_PATH","itemKey","ItemTable","parsedProfile","search","mode","filteredItems","navigate","useNavigate","matchingItems","filter","item","includes","toLowerCase","scope","user","username","Fragment","charAt","toUpperCase","onClick","state","className","type","count","comment","colSpan","RecentItems","groupedRecentItems","reduce","arr","Object","entries","forEach","date","push","sort","a","b","obj","dateDistance","formatDistanceToNowStrict","addSuffix","locale","pl","enUS","group","recentItems","itemUser","find","useAuth","saveToken","token","decoded","jwt_decode","userId","isLoggedIn","mapItemNames","items","customSearch","en","itemNames","runes","setItems","uniqueItems","Home","params","useParams","setType","setMode","setLang","profileUser","parsedData","placeholder","encodeURIComponent","replace","Login","useLogin","loading","location","useLocation","userName","setUserName","password","setPassword","from","pathname","errors","alert","join","src","alt","width","height","onSubmit","e","preventDefault","FormData","append","MD5","hashPassword","required","event","disabled","Item","executeProfile","useSaveProfile","executeSave","currentUserProfile","parsedUserData","userItem","existingComments","Array","Set","values","Boolean","itemState","setItemState","newComment","setNewComment","Date","now","then","min","Math","max","defaultChecked","perfect","ethereal","RequireAuth","to","RequireProfile","App","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e023ca3.chunk.js","sourcesContent":["export const TOKEN_KEY = 'token-maxroll';\r\nexport const USER_KEY = 'user-maxroll';\r\nexport const PROFILE_KEY = 'profile-maxroll';\r\nexport const TYPE_KEY = 'type';\r\nexport const LANG_KEY = 'lang';\r\nexport const MODE_KEY = 'mode';\r\n","const MAXROLL_BASE_URL = 'https://d2planner.maxroll.gg/';\r\n\r\nexport function MakeUrl(baseUrl: string, path: string): string {\r\n  path = path.trim();\r\n  if (path[0] === '/') {\r\n    path = path.substring(1);\r\n  }\r\n  return baseUrl + path;\r\n}\r\n\r\nexport function MaxrollHost(path: string | undefined): string | undefined {\r\n  if (typeof path === 'string') {\r\n    return MakeUrl(MAXROLL_BASE_URL, path);\r\n  } else {\r\n    return undefined;\r\n  }\r\n}\r\n","import { LANG_KEY, MODE_KEY, PROFILE_KEY, TYPE_KEY, USER_KEY } from '../config/localStorage';\r\n\r\nexport const getLocalStorage = (key: string) => window.localStorage.getItem(key);\r\nexport const setLocalStorage = (key: string, value: string | number | object) =>\r\n  window.localStorage.setItem(key, typeof value === 'string' ? value : JSON.stringify(value));\r\nexport const getUser = () => Number(getLocalStorage(USER_KEY));\r\nexport const getProfile = () => getLocalStorage(PROFILE_KEY) || '';\r\nexport const getType = () => getLocalStorage(TYPE_KEY) || 'all';\r\nexport const getMode = () => getLocalStorage(MODE_KEY) || 'group';\r\nexport const getLang = () => getLocalStorage(LANG_KEY) || 'pl';\r\n","import useAxios from 'axios-hooks';\r\nimport { MaxrollHost } from '../utils/remote-url';\r\nimport { PROFILE_KEY, TOKEN_KEY } from '../config/localStorage';\r\nimport { getLocalStorage } from '../utils/localStorage';\r\n\r\nexport interface LoginResponseData {\r\n  token?: string;\r\n  errors?: string[];\r\n}\r\nexport interface UserResponseData {\r\n  id?: string;\r\n  data?: string;\r\n}\r\n\r\nexport interface ProfileResponseData {\r\n  user?: number;\r\n  username?: string;\r\n  owner?: number;\r\n  data?: string;\r\n}\r\n\r\nexport function useLogin(options = { manual: true }) {\r\n  return useAxios<LoginResponseData, FormData>(\r\n    { url: MaxrollHost('account'), method: 'POST' },\r\n    options\r\n  );\r\n}\r\n\r\nexport function useUser(options = { manual: false }) {\r\n  return useAxios<UserResponseData[]>(\r\n    {\r\n      url: MaxrollHost('grail?action=loadUser'),\r\n      method: 'POST',\r\n      headers: { Authorization: `Bearer ${getLocalStorage(TOKEN_KEY)}` },\r\n    },\r\n    options\r\n  );\r\n}\r\n\r\nexport function useProfile(options = { manual: false }) {\r\n  return useAxios<ProfileResponseData[]>(\r\n    {\r\n      url: MaxrollHost(`grail?action=loadProfile&id=${getLocalStorage(PROFILE_KEY)}`),\r\n      method: 'POST',\r\n      headers: { Authorization: `Bearer ${getLocalStorage(TOKEN_KEY)}` },\r\n    },\r\n    options\r\n  );\r\n}\r\n\r\nexport function useSaveProfile(options = { manual: true }) {\r\n  return useAxios<ProfileResponseData[]>(\r\n    {\r\n      url: MaxrollHost(`grail?action=saveProfile&id=${getLocalStorage(PROFILE_KEY)}`),\r\n      method: 'POST',\r\n      headers: { Authorization: `Bearer ${getLocalStorage(TOKEN_KEY)}` },\r\n    },\r\n    options\r\n  );\r\n}\r\n","function ChooseProfile({ profiles, saveProfile }) {\r\n  const onChange = ({ target: { value } }) => {\r\n    saveProfile(value);\r\n  };\r\n\r\n  return (\r\n    <select onChange={onChange}>\r\n      {profiles.map((profile) => (\r\n        <option key={profile.id} value={profile.id}>\r\n          {profile.name}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n}\r\n\r\nexport default ChooseProfile;\r\n","import { useCallback, useEffect, useState } from 'react';\r\nimport { PROFILE_KEY } from '../config/localStorage';\r\nimport { useUser } from '../hooks/resources';\r\nimport { getLang, getProfile, setLocalStorage } from '../utils/localStorage';\r\nimport ChooseProfile from '../components/chooseProfile';\r\n\r\nfunction RequireUser({ children }) {\r\n  const [{ data }, execute] = useUser({ manual: true });\r\n  const [profile, setProfile] = useState(getProfile());\r\n  const lang = getLang();\r\n\r\n  const profiles = data?.map((profile) => ({\r\n    id: profile.id,\r\n    name: JSON.parse(profile.data).name,\r\n  }));\r\n\r\n  const saveProfile = useCallback((profile: string) => {\r\n    setLocalStorage(PROFILE_KEY, profile);\r\n    setProfile(profile);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!data) {\r\n      execute();\r\n    } else {\r\n      if (data.length === 1) {\r\n        saveProfile(data[0].id);\r\n      }\r\n    }\r\n  }, [data, execute, saveProfile]);\r\n\r\n  return data ? (\r\n    profile ? (\r\n      children\r\n    ) : (\r\n      <main>\r\n        <section>\r\n          <h1>{lang === 'pl' ? 'Wybierz profil:' : 'Choose profile:'}</h1>\r\n          <ChooseProfile profiles={profiles} saveProfile={saveProfile} />\r\n        </section>\r\n      </main>\r\n    )\r\n  ) : null;\r\n}\r\n\r\nexport default RequireUser;\r\n","export const HOME_PATH = () => '*';\r\nexport const LOGIN_PATH = () => '/login';\r\nexport const ITEM_PATH = (itemKey = ':itemKey') => `/item/${itemKey}`;\r\n","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ITEM_PATH } from '../router/paths';\r\n\r\nfunction ItemTable({ parsedProfile, search, lang, mode, filteredItems }) {\r\n  const navigate = useNavigate();\r\n  const matchingItems = search\r\n    ? filteredItems.filter((item) => item.search.includes(search.toLowerCase()))\r\n    : [];\r\n\r\n  return (\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">{lang === 'pl' ? 'Przedmiot' : 'Item'}</th>\r\n          {parsedProfile.map(({ user, username }) => (\r\n            <React.Fragment key={user}>\r\n              <th scope=\"col\">\r\n                {mode === 'solo'\r\n                  ? lang === 'pl'\r\n                    ? 'Ilość'\r\n                    : 'Count'\r\n                  : username.charAt(0).toUpperCase()}\r\n              </th>\r\n              {mode === 'solo' && <th>{lang === 'pl' ? 'Komentarz' : 'Comment'}</th>}\r\n            </React.Fragment>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {matchingItems.length ? (\r\n          matchingItems.map((item) => (\r\n            <tr\r\n              key={item.key}\r\n              onClick={() => {\r\n                navigate(ITEM_PATH(item.key), { state: { search } });\r\n              }}\r\n            >\r\n              <td className={item.type}>{item[lang]}</td>\r\n              {parsedProfile.map(({ user, data: { data } }) => (\r\n                <React.Fragment key={user}>\r\n                  <td>{data[item.key]?.count}</td>\r\n                  {mode === 'solo' && <td>{data[item.key]?.comment}</td>}\r\n                </React.Fragment>\r\n              ))}\r\n            </tr>\r\n          ))\r\n        ) : (\r\n          <tr>\r\n            <td colSpan={100} className=\"dimmed\">\r\n              {lang === 'pl' ? 'Nic nie znaleziono' : 'Nothing found'}\r\n            </td>\r\n          </tr>\r\n        )}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default ItemTable;\r\n","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { formatDistanceToNowStrict } from 'date-fns';\r\nimport { enUS, pl } from 'date-fns/locale';\r\nimport { ITEM_PATH } from '../router/paths';\r\n\r\nfunction RecentItems({ parsedProfile, lang, mode, filteredItems }) {\r\n  const navigate = useNavigate();\r\n\r\n  const recentItems = parsedProfile\r\n    .reduce((arr, { user, username, data: { data } }) => {\r\n      Object.entries(data).forEach(([key, { date }]: [string, { date: number }]) => {\r\n        arr.push({\r\n          key,\r\n          date,\r\n          user,\r\n          username,\r\n        });\r\n      });\r\n\r\n      return arr;\r\n    }, [])\r\n    .sort((a, b) => b.date - a.date);\r\n\r\n  const groupedRecentItems = recentItems.reduce((obj, item) => {\r\n    const dateDistance = formatDistanceToNowStrict(item.date, {\r\n      addSuffix: true,\r\n      locale: lang === 'pl' ? pl : enUS,\r\n    });\r\n\r\n    obj[dateDistance] = obj[dateDistance] || [];\r\n    obj[dateDistance].push(item);\r\n\r\n    return obj;\r\n  }, {});\r\n\r\n  return (\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">{lang === 'pl' ? 'Przedmiot' : 'Item'}</th>\r\n          {parsedProfile.map(({ username }) => (\r\n            <React.Fragment key={username}>\r\n              <th scope=\"col\">\r\n                {mode === 'solo'\r\n                  ? lang === 'pl'\r\n                    ? 'Ilość'\r\n                    : 'Count'\r\n                  : username.charAt(0).toUpperCase()}\r\n              </th>\r\n              {mode === 'solo' && <th>{lang === 'pl' ? 'Komentarz' : 'Comment'}</th>}\r\n            </React.Fragment>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {Object.entries(groupedRecentItems).map(\r\n          ([group, recentItems]: [string, { key: string; date: number; user: string }[]]) => (\r\n            <React.Fragment key={group}>\r\n              <tr className=\"sticky\">\r\n                <td colSpan={100}>{group}</td>\r\n              </tr>\r\n              {recentItems.map(({ key, date, user: itemUser }) => {\r\n                const item = filteredItems.find((item) => item.key === key);\r\n                return (\r\n                  <tr\r\n                    key={date}\r\n                    onClick={() => {\r\n                      navigate(ITEM_PATH(item.key));\r\n                    }}\r\n                  >\r\n                    <td className={item.type}>{item[lang]}</td>\r\n                    {parsedProfile.map(({ user, data }) => (\r\n                      <React.Fragment key={user}>\r\n                        <td className={mode === 'group' && user !== itemUser ? 'dimmed' : ''}>\r\n                          {data.data[item.key]?.count}\r\n                        </td>\r\n                        {mode === 'solo' && <td>{data.data[item.key]?.comment}</td>}\r\n                      </React.Fragment>\r\n                    ))}\r\n                  </tr>\r\n                );\r\n              })}\r\n            </React.Fragment>\r\n          )\r\n        )}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n\r\nexport default RecentItems;\r\n","import { useCallback } from 'react';\r\nimport jwt_decode from 'jwt-decode';\r\nimport { TOKEN_KEY, USER_KEY } from '../config/localStorage';\r\nimport { getLocalStorage, getUser, setLocalStorage } from '../utils/localStorage';\r\n\r\ninterface JWT {\r\n  exp: number;\r\n  iat: number;\r\n  iss: string;\r\n  nbf: number;\r\n  userId: number;\r\n  userLevel: number;\r\n  userName: 'string';\r\n}\r\n\r\nexport function useAuth() {\r\n  const saveToken = useCallback((token: string) => {\r\n    const decoded: JWT = jwt_decode(token);\r\n\r\n    setLocalStorage(TOKEN_KEY, token);\r\n    setLocalStorage(USER_KEY, `${decoded.userId}`);\r\n  }, []);\r\n\r\n  const isLoggedIn = getLocalStorage(TOKEN_KEY) !== null;\r\n  const user = getUser();\r\n\r\n  return {\r\n    saveToken,\r\n    isLoggedIn,\r\n    user,\r\n  };\r\n}\r\n","import itemNames from './itemNames.json';\r\nimport runes from './runes.json';\r\nimport setItems from './setItems.json';\r\nimport uniqueItems from './uniqueItems.json';\r\n\r\nconst mapItemNames = (items, type, customSearch = '') =>\r\n  Object.entries(items).map(([key, name]: [string, string]) => {\r\n    const en = itemNames[name]?.en || name || '';\r\n    const pl = itemNames[name]?.pl || en;\r\n    const search = `${en} ${pl} ${customSearch}`.trim().toLowerCase();\r\n\r\n    return {\r\n      key,\r\n      en,\r\n      pl,\r\n      search,\r\n      type,\r\n    };\r\n  });\r\n\r\nconst items = [\r\n  ...mapItemNames(runes, 'rune', 'runes runa runy'),\r\n  ...mapItemNames(setItems, 'set', 'sets sety zestawy'),\r\n  ...mapItemNames(uniqueItems, 'unique', 'uniques unikaty'),\r\n];\r\n\r\nexport default items;\r\n","import React, { useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router';\r\nimport ItemTable from '../components/itemTable';\r\nimport RecentItems from '../components/recentItems';\r\nimport { LANG_KEY, MODE_KEY, TYPE_KEY } from '../config/localStorage';\r\nimport { useAuth } from '../hooks/auth-hook';\r\nimport { useProfile } from '../hooks/resources';\r\nimport { HOME_PATH } from '../router/paths';\r\nimport { getLang, getMode, getType, setLocalStorage } from '../utils/localStorage';\r\nimport items from '../items';\r\n\r\nfunction Home() {\r\n  const { user } = useAuth();\r\n  const [{ data: profile }] = useProfile();\r\n  const params = useParams();\r\n  const navigate = useNavigate();\r\n  const [type, setType] = useState(getType());\r\n  const [mode, setMode] = useState(getMode());\r\n  const [lang, setLang] = useState(getLang());\r\n  const search = params[HOME_PATH()];\r\n\r\n  const filteredItems = items.filter((item) => type === 'all' || item.type === type);\r\n\r\n  const onSearch = ({ target: { value } }) => {\r\n    navigate(`/${encodeURIComponent(value)}`, { replace: true });\r\n  };\r\n\r\n  const saveType = ({ target: { value } }) => {\r\n    setLocalStorage(TYPE_KEY, value);\r\n    setType(value);\r\n  };\r\n\r\n  const saveMode = ({ target: { value } }) => {\r\n    setLocalStorage(MODE_KEY, value);\r\n    setMode(value);\r\n  };\r\n\r\n  const saveLang = ({ target: { value } }) => {\r\n    setLocalStorage(LANG_KEY, value);\r\n    setLang(value);\r\n  };\r\n\r\n  const parsedProfile =\r\n    profile &&\r\n    (mode === 'solo' ? profile.filter((profileUser) => profileUser.user === user) : profile).map(\r\n      (profile) => {\r\n        const parsedData = JSON.parse(profile.data);\r\n\r\n        Object.entries(parsedData.data).forEach(([key, { count }]: [string, { count: string }]) => {\r\n          const item = filteredItems.find((item) => item.key === key);\r\n\r\n          if (!item || !count) {\r\n            delete parsedData.data[key];\r\n          }\r\n        });\r\n\r\n        return {\r\n          ...profile,\r\n          data: parsedData,\r\n        };\r\n      }\r\n    );\r\n\r\n  return (\r\n    <>\r\n      <header>\r\n        <input\r\n          className=\"grow\"\r\n          type=\"text\"\r\n          id=\"search\"\r\n          placeholder={lang === 'pl' ? 'szukaj' : 'search'}\r\n          value={search}\r\n          onChange={onSearch}\r\n        />\r\n        <select className=\"right\" value={type} onChange={saveType}>\r\n          <option value=\"all\">{lang === 'pl' ? 'wszystko' : 'everything'}</option>\r\n          <option value=\"rune\">{lang === 'pl' ? 'runy' : 'runes'}</option>\r\n          <option value=\"unique\">{lang === 'pl' ? 'unikaty' : 'uniques'}</option>\r\n          <option value=\"set\">{lang === 'pl' ? 'zestawy' : 'sets'}</option>\r\n        </select>\r\n        <select className=\"left\" value={mode} onChange={saveMode}>\r\n          <option value=\"group\">{lang === 'pl' ? 'grupa' : 'group'}</option>\r\n          <option value=\"solo\">{lang === 'pl' ? 'solo' : 'solo'}</option>\r\n        </select>\r\n        <select className=\"right\" value={lang} onChange={saveLang}>\r\n          <option value=\"pl\">pl</option>\r\n          <option value=\"en\">en</option>\r\n        </select>\r\n      </header>\r\n      <main>\r\n        {search ? (\r\n          <ItemTable\r\n            lang={lang}\r\n            mode={mode}\r\n            search={search}\r\n            parsedProfile={parsedProfile}\r\n            filteredItems={filteredItems}\r\n          />\r\n        ) : (\r\n          <RecentItems\r\n            lang={lang}\r\n            mode={mode}\r\n            parsedProfile={parsedProfile}\r\n            filteredItems={filteredItems}\r\n          />\r\n        )}\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useLogin } from '../hooks/resources';\r\nimport { useAuth } from '../hooks/auth-hook';\r\nimport { hashPassword } from '../utils/password-hash';\r\nimport { useLocation, useNavigate } from 'react-router';\r\nimport { HOME_PATH } from '../router/paths';\r\n\r\nfunction Login() {\r\n  const [{ data, loading }, execute] = useLogin();\r\n  const { saveToken } = useAuth();\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const [userName, setUserName] = useState<string>('');\r\n  const [password, setPassword] = useState<string>('');\r\n\r\n  useEffect(() => {\r\n    if (data?.token) {\r\n      const { from } = location.state || { from: { pathname: HOME_PATH() } };\r\n\r\n      saveToken(data.token);\r\n      navigate(from, { replace: true });\r\n    }\r\n\r\n    if (data?.errors) {\r\n      alert(data?.errors.join('\\n'));\r\n    }\r\n  }, [data, saveToken, location, navigate]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = new FormData();\r\n    data.append('action', 'signin');\r\n    data.append('user_name', userName);\r\n    data.append('password_hash', hashPassword(password));\r\n\r\n    execute({\r\n      data,\r\n    });\r\n  };\r\n  return (\r\n    <main>\r\n      <section>\r\n        <img src=\"./images/d2r_logo.gif\" alt=\"\" width=\"250\" height=\"170\" className=\"logo\" />\r\n        <h1>Better D2R Holy Grail</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <label>\r\n            <span>Username</span>\r\n            <input\r\n              placeholder=\"Username\"\r\n              name=\"username\"\r\n              type=\"text\"\r\n              required\r\n              value={userName}\r\n              onChange={(event) => setUserName(event.target.value)}\r\n            />\r\n          </label>\r\n          <label>\r\n            <span>Password</span>\r\n            <input\r\n              placeholder=\"Password\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              required\r\n              value={password}\r\n              onChange={(event) => setPassword(event.target.value)}\r\n            />\r\n          </label>\r\n          <footer>\r\n            <button disabled={loading} type=\"submit\">\r\n              Login\r\n            </button>\r\n          </footer>\r\n        </form>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import MD5 from 'crypto-js/md5';\r\n\r\nexport function hashPassword(password: string): string {\r\n  const SALT = 'SmartSalt';\r\n  return MD5(`${SALT}${password}`);\r\n}\r\n\r\n","import React, { useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router';\r\nimport { useProfile, useSaveProfile } from '../hooks/resources';\r\nimport items from '../items';\r\nimport { HOME_PATH } from '../router/paths';\r\nimport { getLang, getUser } from '../utils/localStorage';\r\n\r\nfunction Item() {\r\n  const params = useParams();\r\n  const [{ data: profile }, executeProfile] = useProfile();\r\n  const [, executeSave] = useSaveProfile();\r\n  const lang = getLang();\r\n  const item = items.find((item) => item.key === params.itemKey);\r\n  const navigate = useNavigate();\r\n\r\n  const currentUserProfile = profile.find((profile) => profile.user === getUser());\r\n  const parsedUserData = JSON.parse(currentUserProfile.data);\r\n  const userItem = parsedUserData.data[params.itemKey];\r\n  const existingComments = Array.from(\r\n    new Set(\r\n      Object.values(parsedUserData.data)\r\n        .map((item: { comment: string }) => item.comment)\r\n        .filter(Boolean)\r\n    )\r\n  );\r\n\r\n  const [itemState, setItemState] = useState(userItem || { count: 0 });\r\n  const [newComment, setNewComment] = useState(false);\r\n\r\n  const onChange = ({ target: { name, value } }) => {\r\n    setItemState({ ...itemState, [name]: value });\r\n  };\r\n\r\n  const onDecrementCount = () => {\r\n    setItemState({ ...itemState, count: Math.max(0, itemState.count - 1) });\r\n  };\r\n  const onIncrementCount = () => {\r\n    setItemState({ ...itemState, count: itemState.count + 1 });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (itemState.count === 0) {\r\n      delete parsedUserData.data[params.itemKey];\r\n    } else {\r\n      parsedUserData.data[params.itemKey] = { ...itemState, date: Date.now() };\r\n    }\r\n\r\n    executeSave({ data: JSON.stringify(parsedUserData) })\r\n      .then(() => executeProfile())\r\n      .then(() => navigate(HOME_PATH()));\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <section>\r\n        <h1 className={item.type}>{item[lang]}</h1>\r\n        <form onSubmit={handleSubmit}>\r\n          <label>\r\n            <span>{lang === 'pl' ? 'Ilość:' : 'Count:'}</span>\r\n            <input name=\"count\" type=\"number\" value={itemState.count} min={0} onChange={onChange} />\r\n            <button type=\"button\" onClick={onDecrementCount}>\r\n              ➖\r\n            </button>\r\n            <button type=\"button\" onClick={onIncrementCount}>\r\n              ➕\r\n            </button>\r\n          </label>\r\n\r\n          <label>\r\n            <span>{lang === 'pl' ? 'Komentarz:' : 'Comment:'}</span>\r\n            <select\r\n              id=\"comment\"\r\n              value={itemState.comment}\r\n              name=\"comment\"\r\n              disabled={newComment}\r\n              onChange={onChange}\r\n            >\r\n              <option value=\"\"></option>\r\n              {existingComments.map((comment) => (\r\n                <option key={comment} value={comment}>\r\n                  {comment}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <button type=\"button\" onClick={() => setNewComment(true)} disabled={newComment}>\r\n              ➕\r\n            </button>\r\n          </label>\r\n\r\n          {newComment && (\r\n            <label>\r\n              <span>{lang === 'pl' ? 'Dodaj nowy komentarz:' : 'Add new comment:'}</span>\r\n              <textarea name=\"comment\" value={itemState.comment} onChange={onChange} />\r\n              <button type=\"button\" onClick={() => setNewComment(false)}>\r\n                ➖\r\n              </button>\r\n            </label>\r\n          )}\r\n\r\n          <label>\r\n            <span>{lang === 'pl' ? 'Idealny:' : 'Perfect:'}</span>\r\n            <input\r\n              name=\"perfect\"\r\n              type=\"checkbox\"\r\n              defaultChecked={itemState.perfect}\r\n              onChange={() => setItemState({ ...itemState, perfect: !itemState.perfect })}\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            <span>{lang === 'pl' ? 'Eteryczny:' : 'Ethereal:'}</span>\r\n            <input\r\n              name=\"ethereal\"\r\n              type=\"checkbox\"\r\n              defaultChecked={itemState.ethereal}\r\n              onChange={() => setItemState({ ...itemState, ethereal: !itemState.ethereal })}\r\n            />\r\n          </label>\r\n\r\n          <footer>\r\n            <button className=\"button-cta\" type=\"submit\">\r\n              {lang === 'pl' ? 'Zapisz' : 'Save'}\r\n            </button>\r\n          </footer>\r\n        </form>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Item;\r\n","import { Navigate, useLocation } from 'react-router-dom';\r\nimport { useAuth } from '../hooks/auth-hook';\r\nimport { LOGIN_PATH } from './paths';\r\n\r\nfunction RequireAuth({ children }) {\r\n  const { isLoggedIn } = useAuth();\r\n  const location = useLocation();\r\n\r\n  if (!isLoggedIn) {\r\n    return <Navigate to={LOGIN_PATH()} replace state={{ from: location }} />;\r\n  }\r\n\r\n  return children;\r\n}\r\n\r\nexport default RequireAuth;\r\n","import { useEffect } from 'react';\r\nimport { useProfile } from '../hooks/resources';\r\n\r\nfunction RequireProfile({ children }) {\r\n  const [{ data }, execute] = useProfile({ manual: true });\r\n\r\n  useEffect(() => {\r\n    if (!data) {\r\n      execute();\r\n    }\r\n  }, [data, execute]);\r\n\r\n  return data ? children : null;\r\n}\r\n\r\nexport default RequireProfile;\r\n","import React from 'react';\r\nimport { HashRouter, Routes, Route } from 'react-router-dom';\r\nimport RequireUser from './requireUser';\r\nimport Home from '../pages/home';\r\nimport Login from '../pages/login';\r\nimport Item from '../pages/item';\r\nimport RequireAuth from './requireAuth';\r\nimport RequireProfile from './requireProfile';\r\nimport { HOME_PATH, ITEM_PATH, LOGIN_PATH } from './paths';\r\n\r\nfunction App() {\r\n  return (\r\n    <HashRouter>\r\n      <Routes>\r\n        <Route path={LOGIN_PATH()} element={<Login />} />\r\n        <Route\r\n          path={ITEM_PATH()}\r\n          element={\r\n            <RequireAuth>\r\n              <RequireUser>\r\n                <RequireProfile>\r\n                  <Item />\r\n                </RequireProfile>\r\n              </RequireUser>\r\n            </RequireAuth>\r\n          }\r\n        />\r\n        <Route\r\n          path={HOME_PATH()}\r\n          element={\r\n            <RequireAuth>\r\n              <RequireUser>\r\n                <RequireProfile>\r\n                  <Home />\r\n                </RequireProfile>\r\n              </RequireUser>\r\n            </RequireAuth>\r\n          }\r\n        />\r\n      </Routes>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style/index.scss';\r\nimport Router from './router';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}