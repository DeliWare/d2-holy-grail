{"version":3,"sources":["hooks/auth-hook.ts","router/paths.ts","router/requireAuth.tsx","items/index.ts","components/itemTable.tsx","pages/home.tsx","pages/login.tsx","hooks/resources.ts","utils/remote-url.ts","utils/password-hash.ts","pages/item.tsx","router/index.tsx","index.tsx"],"names":["TOKEN_KEY","USER_KEY","useAuth","saveToken","useCallback","token","decoded","jwt_decode","window","localStorage","setItem","userId","isLoggedIn","getItem","user","Number","ITEM_PATH","itemKey","RequireAuth","children","location","useLocation","to","replace","state","from","mapItemNames","items","type","Object","entries","map","key","name","en","itemNames","pl","search","trim","toLowerCase","runes","setItems","uniqueItems","ItemTable","parsedProfiles","lang","mode","matchingItems","filter","item","includes","scope","profile","Fragment","username","charAt","toUpperCase","className","i","data","count","comment","LANG_KEY","MODE_KEY","Home","useState","setSearch","setMode","setLang","saveMode","saveLang","profiles","JSON","parse","id","placeholder","value","onChange","target","onClick","Login","useAxios","url","path","baseUrl","substring","MakeUrl","method","manual","useLogin","loading","execute","navigate","useNavigate","userName","setUserName","password","setPassword","useEffect","pathname","errors","alert","join","onSubmit","e","preventDefault","FormData","append","MD5","hashPassword","required","event","disabled","Item","params","useParams","find","console","info","App","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65474c87.chunk.js","sourcesContent":["import { useCallback } from 'react';\nimport jwt_decode from 'jwt-decode';\n\ninterface JWT {\n  exp: number;\n  iat: number;\n  iss: string;\n  nbf: number;\n  userId: number;\n  userLevel: number;\n  userName: 'string';\n}\n\nexport const TOKEN_KEY = 'token-maxroll';\nexport const USER_KEY = 'user-maxroll';\n\nexport function useAuth() {\n  const saveToken = useCallback((token: string) => {\n    const decoded: JWT = jwt_decode(token);\n\n    window.localStorage.setItem(TOKEN_KEY, token);\n    window.localStorage.setItem(USER_KEY, `${decoded.userId}`);\n  }, []);\n\n  const isLoggedIn = window.localStorage.getItem(TOKEN_KEY) !== null;\n  const user = Number(window.localStorage.getItem(USER_KEY));\n\n  return {\n    saveToken,\n    isLoggedIn,\n    user,\n  };\n}\n","export const HOME_PATH = () => '/';\nexport const LOGIN_PATH = () => '/login';\nexport const ITEM_PATH = (itemKey = ':itemKey') => `/item/${itemKey}`;\n","import React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../hooks/auth-hook';\nimport { LOGIN_PATH } from './paths';\n\nfunction RequireAuth({ children }) {\n  const { isLoggedIn } = useAuth();\n  const location = useLocation();\n\n  if (!isLoggedIn) {\n    return <Navigate to={LOGIN_PATH()} replace state={{ from: location }} />;\n  }\n\n  return children;\n}\n\nexport default RequireAuth;\n","import itemNames from './itemNames.json';\nimport runes from './runes.json';\nimport setItems from './setItems.json';\nimport uniqueItems from './uniqueItems.json';\n\nconst mapItemNames = (items, type) =>\n  Object.entries(items).map(([key, name]: [string, string]) => {\n    const en = itemNames[name]?.en || name || '';\n    const pl = itemNames[name]?.pl || en;\n    const search = `${en} ${pl}`.trim().toLowerCase();\n\n    return {\n      key,\n      en,\n      pl,\n      search,\n      type,\n    };\n  });\n\nconst items = [\n  ...mapItemNames(runes, 'rune'),\n  ...mapItemNames(setItems, 'set'),\n  ...mapItemNames(uniqueItems, 'unique'),\n];\n\nexport default items;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport items from '../items';\nimport { ITEM_PATH } from '../router/paths';\n\nfunction ItemTable({ parsedProfiles, search, lang, mode }) {\n  const matchingItems = search\n    ? items.filter((item) => item.search.includes(search.toLowerCase()))\n    : [];\n\n  return (\n    <table>\n      <thead>\n        <tr>\n          <th scope=\"col\">{lang === 'ðŸ‡µðŸ‡±' ? 'Przedmiot' : 'Item'}</th>\n          {parsedProfiles.map((profile) => (\n            <React.Fragment key={profile.user}>\n              <th scope=\"col\">\n                {mode === 'ðŸ§‘'\n                  ? lang === 'ðŸ‡µðŸ‡±'\n                    ? 'IloÅ›Ä‡'\n                    : 'Count'\n                  : profile.username.charAt(0).toUpperCase()}\n              </th>\n              {mode === 'ðŸ§‘' && <th>{lang === 'ðŸ‡µðŸ‡±' ? 'Komentarz' : 'Comment'}</th>}\n            </React.Fragment>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {matchingItems.map((item) => (\n          <tr key={item.key}>\n            <td className={item.type}>\n              <Link to={ITEM_PATH(item.key)} state={{ search }}>\n                {item[lang === 'ðŸ‡µðŸ‡±' ? 'pl' : 'en']}\n              </Link>\n            </td>\n            {parsedProfiles.map((profile, i) => (\n              <React.Fragment key={profile.user}>\n                <td>{profile.data.data[item.key]?.count}</td>\n                {mode === 'ðŸ§‘' && <td>{profile.data.data[item.key]?.comment}</td>}\n              </React.Fragment>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default ItemTable;\n","import React, { useCallback, useState } from 'react';\nimport ItemTable from '../components/itemTable';\nimport { useAuth } from '../hooks/auth-hook';\nimport profiles from '../loadProfile.mock.json';\n\nconst LANG_KEY = 'lang';\nconst MODE_KEY = 'mode';\n\nfunction Home() {\n  const { user } = useAuth();\n  const [search, setSearch] = useState('');\n  const [mode, setMode] = useState(window.localStorage.getItem(MODE_KEY) || 'ðŸ‘ª');\n  const [lang, setLang] = useState(window.localStorage.getItem(LANG_KEY) || 'ðŸ‡µðŸ‡±');\n\n  const saveMode = useCallback((mode: string) => {\n    window.localStorage.setItem(MODE_KEY, mode);\n    setMode(mode);\n  }, []);\n\n  const saveLang = useCallback((lang: string) => {\n    window.localStorage.setItem(LANG_KEY, lang);\n    setLang(lang);\n  }, []);\n\n  const parsedProfiles = (\n    mode === 'ðŸ‘ª' ? profiles : profiles.filter((profile) => profile.user === user)\n  ).map((profile) => ({\n    ...profile,\n    data: JSON.parse(profile.data),\n  }));\n\n  const onSearch = ({ target: { value } }) => {\n    setSearch(value);\n  };\n\n  return (\n    <>\n      <header>\n        <input\n          type=\"text\"\n          id=\"search\"\n          placeholder={lang === 'ðŸ‡µðŸ‡±' ? 'Szukaj' : 'Search'}\n          value={search}\n          onChange={onSearch}\n        />\n        <button onClick={() => saveMode(mode === 'ðŸ‘ª' ? 'ðŸ§‘' : 'ðŸ‘ª')}>{mode}</button>\n        <button onClick={() => saveLang(lang === 'ðŸ‡µðŸ‡±' ? 'ðŸ‡¬ðŸ‡§' : 'ðŸ‡µðŸ‡±')}>{lang}</button>\n      </header>\n      <main>\n        {search ? (\n          <ItemTable lang={lang} mode={mode} search={search} parsedProfiles={parsedProfiles} />\n        ) : (\n          <p>Search!</p>\n        )}\n      </main>\n    </>\n  );\n}\n\nexport default Home;\n","import React, { useEffect, useState } from 'react';\nimport { useLogin } from '../hooks/resources';\nimport { useAuth } from '../hooks/auth-hook';\nimport { hashPassword } from '../utils/password-hash';\nimport { useLocation, useNavigate } from 'react-router';\nimport { HOME_PATH } from '../router/paths';\n\nfunction Login() {\n  const [{ data, loading }, execute] = useLogin();\n  const { saveToken } = useAuth();\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  const [userName, setUserName] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n\n  useEffect(() => {\n    if (data?.token) {\n      const { from } = location.state || { from: { pathname: HOME_PATH() } };\n\n      saveToken(data.token);\n      navigate(from, { replace: true });\n    }\n\n    if (data?.errors) {\n      alert(data?.errors.join('\\n'));\n    }\n  }, [data, saveToken, location, navigate]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const data = new FormData();\n    data.append('action', 'signin');\n    data.append('user_name', userName);\n    data.append('password_hash', hashPassword(password));\n\n    execute({\n      data,\n    });\n  };\n  return (\n    <main>\n      <form onSubmit={handleSubmit}>\n        <input\n          placeholder=\"Username\"\n          name={'username'}\n          type={'text'}\n          required\n          value={userName}\n          onChange={(event) => setUserName(event.target.value)}\n        />\n        <input\n          placeholder=\"Password\"\n          name={'password'}\n          type={'password'}\n          required\n          value={password}\n          onChange={(event) => setPassword(event.target.value)}\n        />\n        <button disabled={loading} type={'submit'}>\n          Login\n        </button>\n      </form>\n    </main>\n  );\n}\n\nexport default Login;\n","import useAxios from 'axios-hooks'\nimport { MaxrollHost } from '../utils/remote-url';\n\nexport interface LoginResponseData {\n  token?: string\n  errors?: string[]\n}\n\nexport interface LoginRequestData {\n  action: string\n  user_name: string\n  password_hash: string\n}\n\nexport function useLogin() {\n  // TODO FormData interface with LoginRequestData??\n  return useAxios<LoginResponseData, FormData>(\n    { url: MaxrollHost('account'), method: 'POST'},\n    { manual: true },\n  )\n}","const MAXROLL_BASE_URL = 'https://d2planner.maxroll.gg/';\n\nexport function MakeUrl(baseUrl: string, path: string): string {\n  path = path.trim();\n  if (path[0] === '/') {\n    path = path.substring(1);\n  }\n  return baseUrl + path;\n}\n\nexport function MaxrollHost(path: string | undefined): string | undefined {\n  if (typeof path === 'string') {\n    return MakeUrl(MAXROLL_BASE_URL, path);\n  } else {\n    return undefined;\n  }\n}\n","import MD5 from 'crypto-js/md5';\n\nexport function hashPassword(password: string): string {\n  const SALT = 'SmartSalt';\n  return MD5(`${SALT}${password}`);\n}\n\n","import React from 'react';\nimport { useParams } from 'react-router';\nimport items from '../items';\n\nfunction Item() {\n  const params = useParams();\n  const item = items.find((item) => item.key === params.itemKey);\n\n  console.info(item);\n\n  return <main>{params.itemKey}</main>;\n}\n\nexport default Item;\n","import React from 'react';\nimport { HashRouter, Routes, Route } from 'react-router-dom';\nimport RequireAuth from './requireAuth';\nimport Home from '../pages/home';\nimport Login from '../pages/login';\nimport Item from '../pages/item';\nimport { HOME_PATH, ITEM_PATH, LOGIN_PATH } from './paths';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Routes>\n        <Route path={LOGIN_PATH()} element={<Login />} />\n        <Route\n          path={HOME_PATH()}\n          element={\n            <RequireAuth>\n              <Home />\n            </RequireAuth>\n          }\n        />\n        <Route\n          path={ITEM_PATH()}\n          element={\n            <RequireAuth>\n              <Item />\n            </RequireAuth>\n          }\n        />\n      </Routes>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport Router from './router';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}